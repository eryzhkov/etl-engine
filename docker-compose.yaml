volumes:
  etl-db-volume:

services:
  etl-management-service:
    image: etl-management-service:latest
    build: etl-management-service
    container_name: etl-ems
    restart: "no"
    environment:
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=etl-kafka:9092
      - EMS_TOPICS_HEARTBEAT=ems.heartbeat
      - SPRING_DATASOURCE_URL=jdbc:postgresql://etl-postgres-db:5432/etl
      - SPRING_DATASOURCE_USERNAME=etl
      - SPRING_DATASOURCE_PASSWORD=etl
      - EMS_DATABASE_SCHEMA=ems
      - EMS_MONITORING_INITIAL_DELAY_MS=2000
      - EMS_MONITORING_FIXED_RATE_MS=10000
      - EMS_MONITORING_UNKNOWN_STATUS_THRESHOLD_MS=20000
      - EMS_MONITORING_OFFLINE_STATUS_THRESHOLD_MS=30000
    ports:
      - "8080:8080"
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:8080/actuator/health || exit 1
      interval: 30s
      timeout: 5s
      start_period: 30s
      retries: 5

  extract-data-service:
    image: extract-data-service:latest
    build: extract-data-service
    container_name: etl-eds
    restart: "no"
    environment:
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=etl-kafka:9092
      - EDS_TOPICS_HEARTBEAT=ems.heartbeat
      - EDS_STATUS_REPORTING_ENABLED=true
      - EDS_STATUS_REPORTING_INITIAL_DELAY_MS=5000
      - EDS_STATUS_REPORTING_FIXED_RATE=10000
    ports:
      - "8081:8080"
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:8080/actuator/health || exit 1
      interval: 30s
      timeout: 5s
      start_period: 30s
      retries: 5

  etl-kafka:
    image: apache/kafka:3.9.0
    container_name: etl-kafka
    restart: "no"
    environment:
      KAFKA_NODE_ID: 0
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 0@etl-kafka:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 1
    healthcheck:
      test: [ "CMD", "/opt/kafka/bin/kafka-broker-api-versions.sh", "--bootstrap-server", "localhost:9092" ]
      interval: 5s
      timeout: 3s
      start_period: 3s
    ports:
      - "9092:9092"

  etl-postgres-db:
    image: postgres:17-alpine
    container_name: etl-postgres-db
    restart: "no"
    environment:
      - POSTGRES_USER=etl
      - POSTGRES_PASSWORD=etl
      - POSTGRES_DB=etl
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB" ]
      interval: 5s
      timeout: 3s
      start_period: 3s
    volumes:
      - ./docker/etl-postgres-db/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
      - etl-db-volume:/var/lib/postgresql/data
    ports:
      - "5432:5432"
