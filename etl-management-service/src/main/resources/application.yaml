spring:
  application:
    name: etl-management-service
  datasource:
    driver-class-name: org.postgresql.Driver
    url: "${SPRING_DATASOURCE_URL}"
    username: "${SPRING_DATASOURCE_USERNAME}"
    password: "${SPRING_DATASOURCE_PASSWORD}"
    continue-on-error: false
    hikari:
      maximum-pool-size: 2
      minimum-idle: 0
      connection-timeout: 5000
  jpa:
    database: postgresql
    show-sql: true
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        default_schema: "${ems.database.schema}"
        format_sql: true
  liquibase:
    drop-first: false
    change-log: classpath:/db-changelog/db-changelog-master.xml
    default-schema: "${ems.database.schema}"
    database-change-log-table: "lb_databasechangelog"
    database-change-log-lock-table: "lb_databasechangeloglock"
logging:
  level:
    root: "info"
    org.hibernate.orm.jdbc.bind: "trace"
    org.springframework.transaction: "debug"
    org.springframework.kafka.transaction: "debug"
    etl.engine.ems: "debug"
server:
  port: 8080
  tomcat:
    threads:
      min-spare: ${SERVER_TOMCAT_THREADS_MIN_SPARE:2}
      max: ${SERVER_TOMCAT_THREADS_MAX:10}
    max-keep-alive-requests: ${SERVER_TOMCAT_MAX_KEEP_ALIVE_REQUESTS:10}
    keep-alive-timeout: ${SERVER_TOMCAT_KEEP_ALIVE_TIMEOUT_MS:30000}
  shutdown: graceful
management:
  endpoints:
    web:
      exposure:
        include: health, info
ems:
  monitoring:
    initial-delay-ms: "${EMS_MONITORING_INITIAL_DELAY_MS}"
    fixed-rate-ms: "${EMS_MONITORING_FIXED_RATE_MS}"
    unknown-status-threshold-ms: "${EMS_MONITORING_UNKNOWN_STATUS_THRESHOLD_MS}"
    offline-status-threshold-ms: "${EMS_MONITORING_OFFLINE_STATUS_THRESHOLD_MS}"
  database:
    schema: "${EMS_DATABASE_SCHEMA}"
  kafka:
    bootstrap-servers: "${EMS_KAFKA_BOOTSTRAP_SERVERS}"
    topics:
      heartbeat: "${EMS_KAFKA_TOPICS_HEARTBEAT}"
      control: "${EMS_KAFKA_TOPICS_CONTROL}"
      progress: "${EMS_KAFKA_TOPICS_PROGRESS}"
    consumer:
      group: "${spring.application.name}"